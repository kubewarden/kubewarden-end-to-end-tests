# docker build -t validator:kw --build-arg USER=(id -un) --build-arg UID=(id -u)  .
FROM opensuse/leap:15.4

# ==================================================================================================
# Packages & dependencies
RUN zypper -n -p http://download.suse.de/ibs/SUSE:/CA/openSUSE_Leap_15.4 in ca-certificates-suse
RUN zypper -n in sudo which curl tar gzip unzip openssh netcat-openbsd hostname vim git-core bash-completion python3-pip
RUN zypper -n in skopeo docker k9s

# Get jq, yq, helm, kubectl, k3d
ARG BIN=/usr/local/bin
RUN curl -sLo $BIN/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod +x $BIN/jq
RUN pip --disable-pip-version-check install yq
# RUN curl -sLo $BIN/yq https://github.com/mikefarah/yq/releases/download/v4.30.5/yq_linux_amd64 && chmod +x $BIN/yq
RUN curl -s https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
RUN curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
RUN curl -sLo $BIN/kubectl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x $BIN/kubectl
#RUN curl -sL https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip | gunzip > $BIN/terraform && chmod +x $BIN/terraform

# In order to access cluster_XXX logs generated by containerized validator as a host user, please do:
#   - build container image with :asuser tag appended and send ARGs for USER and UID:
#     % docker build -t validator:asuser --build-arg USER=$(whoami) --build-arg UID=$(id -u) .
#   - add the host user used for pulling validator git repo and running docker validator into docker group:
#     % sudo usermod -aG docker $USER
#   - run the validator as user with: -u $(stat -c "%u:%g" $PWD) appended, for eg.:
#     % docker run --rm -v $PWD:/app -u $(stat -c "%u:%g" $PWD) validator:asuser -j cluster_3sk -t kube_dashboard
ARG USER
ARG UID
ARG DOCKER_GID # allow user in container to create k3d cluster
RUN if [ -n "$USER" ] && [ "$UID" -gt 0 ]; then \
 useradd -m --no-log-init -u $UID -r -g users $USER; \
 echo "$USER ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers; \
 groupmod -g $DOCKER_GID docker && usermod -aG docker $USER ; fi

# kubectl completion
RUN kubectl completion bash > /etc/bash_completion.d/kubectl

# For getting live output from python scripts the following has to be set
ENV PYTHONUNBUFFERED=0

# Mount validator dir
VOLUME /app
WORKDIR /app
USER ${USER:-root}
ENTRYPOINT ["./validator"]

name: End-to-end tests

on:
  workflow_call:
    inputs:
      controller-image-repository:
        description: "Define the controller container image repository"
        type: string
        required: false
        default: ""
      controller-image-tag:
        description: "Define the controller container image tag"
        required: false
        type: string
        default: ""
      controller-container-image-artifact:
        description: "Load the image used in the deployment from local artifact"
        type: string
        required: false
        default: ""
      policy-server-repository:
        description: "Define the policy server container image tag"
        type: string
        required: false
        default: "ghcr.io/kubewarden/policy-server"
      policy-server-tag:
        description: "Define the policy server container image tag"
        type: string
        required: false
        default: "latest"
      policy-server-container-image-artifact:
        description: "Define the artifact containing the policy server container image"
        type: string
        required: false
        default: ""

jobs:
  kubewarden-e2e-tests:
    name: "Kubewarden basic end-to-end tests"
    runs-on: [self-hosted]
    steps:
      - name: "Checkout end-to-end repository"
        uses: actions/checkout@v3
        with:
          repository: "${{ github.repository_owner }}/kubewarden-end-to-end-tests"
          path: "e2e-tests"
          ref: 'main'
          submodules: 'true'
      - name: "Setup bats testing framework"
        uses: mig4/setup-bats@v1.2.0
        with:
          bats-version: 1.7.0
      - name: "Create Kubernetes cluster with Kubewarden installed"
        uses: kubewarden/github-actions/setup-kubewarden-cluster-action@v1
        with:
          controller-image-repository: ${{ inputs.controller-image-repository }}
          controller-image-tag: ${{ inputs.controller-image-tag }}
          controller-container-image-artifact: ${{ inputs.controller-container-image-artifact }}
          policy-server-repository: ${{ inputs.policy-server-repository }}
          policy-server-tag: ${{ inputs.policy-server-tag }}
          policy-server-container-image-artifact: ${{ inputs.policy-server-container-image-artifact }}
      - name: "Run all end-to-end tests"
        run: |
          make --directory e2e-tests tests upgrade.bats
        shell: bash
        env:
          CLUSTER_CONTEXT: k3d-kubewarden-test-cluster #TODO get context from setup-kubewarden-cluster-action
      - name: "Uninstall Kuberwarden"
        run: |
          # TODO - share release with the create-kubewarden-cluster action
          helm uninstall -n kubewarden kubewarden-controller kubewarden-crds kubewarden-defaults
        env:
          HELM_KUBECONTEXT: k3d-kubewarden-test-cluster
